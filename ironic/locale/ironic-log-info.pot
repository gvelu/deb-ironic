# Translations template for ironic.
# Copyright (C) 2014 ORGANIZATION
# This file is distributed under the same license as the ironic project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2014.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ironic 2014.2.dev165.g574ea62\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2014-08-28 06:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ironic/common/service.py:77
#, python-format
msgid "Created RPC server for service %(service)s on host %(host)s."
msgstr ""

#: ironic/common/service.py:94
#, python-format
msgid "Stopped RPC server for service %(service)s on host %(host)s."
msgstr ""

#: ironic/conductor/manager.py:210
#, python-format
msgid "Successfuly started conductor with hostname %(hostname)s."
msgstr ""

#: ironic/conductor/manager.py:222
#, python-format
msgid "Successfully stopped conductor with hostname %(hostname)s."
msgstr ""

#: ironic/conductor/manager.py:510
#, python-format
msgid "Successfully deployed node %(node)s with instance %(instance)s."
msgstr ""

#: ironic/conductor/manager.py:598
#, python-format
msgid "Successfully unprovisioned node %(node)s with instance %(instance)s."
msgstr ""

#: ironic/conductor/manager.py:947
#, python-format
msgid "Successfully deleted node %(node)s."
msgstr ""

#: ironic/conductor/utils.py:115
#, python-format
msgid "Succesfully set node %(node)s power state to %(state)s."
msgstr ""

#: ironic/drivers/modules/iscsi_deploy.py:300
#, python-format
msgid "Continuing deployment for node %(node)s, params %(params)s"
msgstr ""

#: ironic/drivers/modules/pxe.py:424
#, python-format
msgid "Deployment to node %s done"
msgstr ""

#: ironic/openstack/common/eventlet_backdoor.py:140
#, python-format
msgid "Eventlet backdoor listening on %(port)s for process %(pid)d"
msgstr ""

#: ironic/openstack/common/lockutils.py:82
#, python-format
msgid "Created lock path: %s"
msgstr ""

#: ironic/openstack/common/lockutils.py:251
#, python-format
msgid "Failed to remove file %(file)s"
msgstr ""

#: ironic/openstack/common/periodic_task.py:126
#, python-format
msgid "Skipping periodic task %(task)s because its interval is negative"
msgstr ""

#: ironic/openstack/common/periodic_task.py:131
#, python-format
msgid "Skipping periodic task %(task)s because it is disabled"
msgstr ""

#: ironic/openstack/common/service.py:176
#, python-format
msgid "Caught %s, exiting"
msgstr ""

#: ironic/openstack/common/service.py:240
msgid "Parent process has died unexpectedly, exiting"
msgstr ""

#: ironic/openstack/common/service.py:271
#, python-format
msgid "Child caught %s, exiting"
msgstr ""

#: ironic/openstack/common/service.py:310
msgid "Forking too fast, sleeping"
msgstr ""

#: ironic/openstack/common/service.py:329
#, python-format
msgid "Started child %d"
msgstr ""

#: ironic/openstack/common/service.py:339
#, python-format
msgid "Starting %d workers"
msgstr ""

#: ironic/openstack/common/service.py:356
#, python-format
msgid "Child %(pid)d killed by signal %(sig)d"
msgstr ""

#: ironic/openstack/common/service.py:360
#, python-format
msgid "Child %(pid)s exited with status %(code)d"
msgstr ""

#: ironic/openstack/common/service.py:399
#, python-format
msgid "Caught %s, stopping children"
msgstr ""

#: ironic/openstack/common/service.py:408
msgid "Wait called after thread killed.  Cleaning up."
msgstr ""

#: ironic/openstack/common/service.py:424
#, python-format
msgid "Waiting on %d children to exit"
msgstr ""

